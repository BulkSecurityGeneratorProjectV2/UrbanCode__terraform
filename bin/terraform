#!/bin/sh

# == BEGIN INSTALLER MODIFICATIONS ===============================================

JAVA_OPTS=""
#JAVA_DEBUG_OPTS="@JAVA_DEBUG_OPTS@"
#JAVA_HOME="@JAVA_HOME@"
#javacmd="$JAVA_HOME/bin/java"
javacmd="java"

# == END INSTALLER MODIFICATIONS =================================================

INPUT_FILE=$2
CREDS=$3

create_class=org.urbancode.terraform.main.Main
destroy_class=org.urbancode.terraform.main.Main

# set TERRAFORM_HOME
SHELL_NAME=$0
SHELL_PATH=`dirname ${SHELL_NAME}`

if [ "." = "$SHELL_PATH" ]
then
  SHELL_PATH=`pwd`
fi

TERRAFORM_HOME=`dirname $SHELL_PATH`
echo "TERRAFORM_HOME=$TERRAFORM_HOME"
jarfile="$TERRAFORM_HOME/dist"

export JAVA_HOME
export TERRAFORM_HOME
export INPUT_FILE
export CREDS

# -- Create ---------------------------------------------------------------------
LIB=$TERRAFORM_HOME/lib
CLASSPATH=""
for FILE in $LIB/*.jar
do
	CLASSPATH=$FILE:$CLASSPATH
done

# tack on the terraform jar since we have a : at the end already
CP="$CLASSPATH"$jarfile/terraform.jar":$TERRAFORM_HOME/conf"
PROPS=""

for ARG in $@; do
  if [ "$ARG" = "$1" ]; then
   echo "$ARG"
  elif [ "$ARG" = "$2" ] ; then
   echo "$ARG"
  elif [ "$ARG" = "$3" ] ; then
   echo "$ARG"
  else 
    PROPS="$PROPS $ARG" 
  fi
done
echo "Properties: $PROPS" 

if [ "$1" = "create" ] ; then
  command_line="\"$javacmd\" $JAVA_OPTS 
    -cp \"$CP\" \
    $create_class create \"$INPUT_FILE\" \"$CREDS\" $PROPS"
#    $create_class create \"$INPUT_FILE\" \"$CREDS\" $PROPS >\"$TERRAFORM_HOME/bin/stdout\" 2>&1 &"
  echo $command_line
  eval $command_line
# -- Destroy ----------------------------------------------------------------------

elif [ "$1" = "destroy" ] ; then

#  shift
#  FORCE=0
  command_line="\"$javacmd\" $JAVA_OPTS 
    -cp \"$CP\" \
    $destroy_class destroy \"$INPUT_FILE\" \"$CREDS\""
#    $destroy_class destroy \"$INPUT_FILE\" \"$CREDS\" >\"$TERRAFORM_HOME/bin/stdout\" 2>&1 &"
  echo $command_line
  eval $command_line
  if [ "$?" -eq 0 ]
  then 
    rm $INPUT_FILE
  fi
# -- Usage ---------------------------------------------------------------------

else
#	Also, create -debug|destroy -debug to instruct java to listen on port 10000
#	for remote JPDA Debugger connections.
  echo "Usage: terraform {create|destroy} {input-file} {credentials-file} {prop1=val1 prop2=val2 ... }"
  exit 1
fi
